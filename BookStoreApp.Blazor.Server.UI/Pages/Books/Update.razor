@page "/books/edit/{id:int}"
@attribute [Authorize(Roles = Roles.Administrator)]
@inject IBookService bookService
@inject IAuthorService authorService
@inject NavigationManager navigator

<h3>Edit Book</h3>

<EditForm Model="Book" OnValidSubmit="HandleUpdateBook">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="title">Title</label>
        <InputText class="form-control" @bind-Value="Book.Title" id="title" />
    </div>
    <div class="form-group mt-4">
        <label for="isbn">ISBN</label>
        <InputText class="form-control" @bind-Value="Book.Isbn" id="isbn" />
    </div>
    <div class="form-group mt-4">
        <label for="price">Price</label>
        <InputNumber class="form-control" @bind-Value="Book.Price" id="price" />
    </div>
    <div class="form-group mt-4">
        <label for="year">Year</label>
        <InputNumber class="form-control" @bind-Value="Book.Year" id="year" />
    </div>
    <div class="form-group mt-4">
        <label for="summmary">Summary</label>
        <InputTextArea class="form-control" @bind-Value="Book.Summary" id="summary" />
    </div>
    <div class="form-group mt-4">
        <label for="author">Author</label>
        <InputSelect @bind-Value="Book.AuthorId" class="form-select" id="author">
            <option value="">-- Select the author --</option>
            @foreach (var author in Authors)
            {
                <option value="@author.Id">@author.FirstName @author.LastName</option>
            }

        </InputSelect>
    </div>
    <div class="form-group mt-4">
        <label>Book cover photo</label>
        <div>
            <InputFile OnChange="HandleFileSelection" MaxBufferSize="@(20*2400)" />
            <img id="img" src="@img" width="300" height="300" class="img-thumbnail" />
            <p class="text-danger">@UploadFileWarning</p>
        </div>
    </div>
    <div class="row mt-4">
        <button type="submit" class="btn btn-primary btn-block col-md-6"> <span class="oi oi-check"></span> Update Book</button>
        <button class="btn btn-outline-dark btn-block col-md-6" @onclick="BackToList">Back to list</button>
    </div>
</EditForm>

@code {
    private BookUpdateDto Book = new();
    private List<AuthorReadOnlyDto> Authors = new();
    private string UploadFileWarning = string.Empty;
    private string img = string.Empty;
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var bookResponse = await bookService.GetBookForUpdate(id);
        var authorsResponse = await authorService.GetAuthors();
        if (authorsResponse.Success && bookResponse.Success)
        {
            Book = bookResponse.Data;
            img = Book.Image;
            Authors = authorsResponse.Data;
        }
    }

    private async Task HandleUpdateBook()
    {
        var response = await bookService.UpdateBook(id, Book);
        if (response.Success)
        {
            BackToList();
        }
    }

    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var format = "image/png";
            var resizedImageFile = await file.RequestImageFileAsync(format, 100, 100);
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream().ReadAsync(buffer);
            var imageDataUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

            Book.ImageData = Convert.ToBase64String(buffer);
            Book.OriginalImageName = file.Name;
            img = imageDataUrl;
        }
    }
    private void BackToList()
    {
        navigator.NavigateTo("/books/");
    }

}
