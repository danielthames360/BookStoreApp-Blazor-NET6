@page "/authors/details/{id:int}"
@inject IAuthorService authorService
@inject NavigationManager navigator

<h3>Details</h3>


<EditForm Model="Author">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="firstName">First Name</label>
            <InputText class="form-control" @bind-Value="Author.FirstName" id="firstName" />
        </div>
        <div class="form-group mt-4">
            <label for="lastName">Last Name</label>
            <InputText class="form-control" @bind-Value="Author.LastName" id="lastName" />
        </div>
        <div class="form-group mt-4 mb-4">
            <label for="lastName">Bio</label>
            <InputText class="form-control" @bind-Value="Author.Bio" id="bio" />
        </div>

    </fieldset>

    @if (Author.Books == null || Author.Books.Any() == false)
    {
        <div class="alert alert-dismissible alert-secondary">
            No books for this Author
        </div>
    }
    else
    {
        foreach (var book in Author.Books)
        {
            <div class="card" style="width: 18rem;">
                <img src="@book.Image" class="card-img-top" alt="@book.Title">
                <div class="card-body">
                    <h5 class="card-title">@book.Title - @book.Price.ToString("C")</h5>
                    <p class="card-text"></p>
                    <a href="#" class="btn btn-primary">View book</a>
                </div>
            </div>
        }
    }

    <div class="row mt-4">
        <button class="btn btn-outline-dark btn-block col-md-6" @onclick="BackToList">Back to list</button>
        <button class="btn btn-outline-warning btn-block col-md-6" @onclick="GoToEdit">Go to Edit</button>
    </div>
</EditForm>


@code {
    [Parameter]
    public int id { get; set; }

    private AuthorDetailsDto Author = new AuthorDetailsDto();

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthor(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        navigator.NavigateTo("/authors/");
    }
    private void GoToEdit()
    {
        navigator.NavigateTo($"/authors/edit/{Author.Id}");
    }
}
